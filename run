#!/usr/bin/env bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

if [ -z "$DEV_ENV" ]; then
    echo "env var DEV_ENV needs to be present"
    exit 1
fi

export DEV_ENV="$DEV_ENV"

grep=""
dry_run="0"

pacman -Q git &>/dev/null || sudo pacman -Syu --noconfirm --needed git
sudo pacman -Syu base-devel --noconfirm --needed

if ! command -v paru &>/dev/null; then
  git clone https://aur.archlinux.org/paru.git
  cd paru
  makepkg -si --noconfirm
  cd ~
  rm -rf paru
fi

while [[ $# -gt 0 ]]; do
    case "$1" in
        --dry)
            dry_run="1"
            ;;
        --*)
            grep="${1#--}"  # Remove the leading --
            ;;
        *)
            grep="$1"
            ;;
    esac
    shift
done

log() {
    if [[ $dry_run == "1" ]]; then
        echo "[DRY_RUN]: $1"
    else
        echo "$1"
    fi
}

log "RUN: env: $DEV_ENV -- grep: $grep"

runs_dir=$(find "$script_dir/runs" -mindepth 1 -maxdepth 1 -executable)

found=0
for s in $runs_dir; do
    script_name=$(basename "$s")
    if [[ -n "$grep" ]]; then
        if [[ "$script_name" != *"$grep"* ]]; then
            log "grep \"$grep\" filtered out $s"
            continue
        fi
    fi

    log "running script: $s"
    found=1
    if [[ $dry_run == "0" ]]; then
        "$s"
    fi
done

if [[ $found -eq 0 ]]; then
    log "No script matched \"$grep\""
fi


if [ ! -d "$HOME/.oh-my-zsh" ]; then
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
else
    echo "Oh My Zsh is already installed"
fi

